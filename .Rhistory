summarise(vard = sum(x - mean(x)^2)/count(x))
varC_d = U %>%
group_by(congC)%>%
summarise(vard = sum(x - mean(x))/count(x))
varC_d = U %>%
group_by(congC)%>%
summarise(vard = sum(x - mean(x)))
varC_d = U %>%
group_by(congC)%>%
summarise(vard = sum(x - mean(x))/n())
summarise(vard = sum((x - mean(x))^2/n())
varC_d = U %>%
group_by(congC)%>%
summarise(vard = sum((x - mean(x))^2/n()))
varC_d = U %>%
group_by(congC)%>%
summarise(vard = sum((x - mean(x))^2/n()))
varD_d = U %>%
group_by(congD)%>%
summarise(vard = sum((x - mean(x))^2/n()))
View(varC_d)
varC_a = U %>%
group_by(congC)%>%
summarise(vard = sum((x - mean(x))^2/n()))
U = tibble(
x = c(2, 6, 8, 10, 10, 12),
congC = factor(c(1,2,2,2,3,3)),
congD = factor(c(1,1,1,2,2,3))
)
A = 3
Bc = c(1,3,2)
Bc_bar = mean(Bc)
Bd = c(3,2,1)
Bd_bar = mean(Bd)
mu = mean(Uc$x)
muC = U %>% group_by(congC) %>% summarise(media = mean(x))
muD = U %>% group_by(congD) %>% summarise(media = mean(x))
varC_alfa = U %>%
group_by(congC)%>%
summarise(vard = sum((x - mean(x))^2/n()))
varC_d = sum(varC_alfa/A)
varC_e = sum(Bc*(muC - mu)^2)/6
varD_d = U %>%
group_by(congD)%>%
summarise(vard = sum((x - mean(x))^2/n()))
varC_d = sum(varC_alfa$vard/A)
varD_d = sum(varD_alfa$vard/6)
varD_alfa = U %>%
group_by(congD)%>%
summarise(vard = sum((x - mean(x))^2/n()))
varD_d = sum(varD_alfa$vard/6)
varC_e = sum(Bc*(muC - mu)^2)/6
U = tibble(
x = c(2, 6, 8, 10, 10, 12),
congC = factor(c(1,2,2,2,3,3)),
congD = factor(c(1,1,1,2,2,3))
)
A = 3
Bc = c(1,3,2)
Bc_bar = mean(Bc)
Bd = c(3,2,1)
Bd_bar = mean(Bd)
mu = mean(U$x)
muC = U %>% group_by(congC) %>% summarise(media = mean(x))
muD = U %>% group_by(congD) %>% summarise(media = mean(x))
varC_alfa = U %>%
group_by(congC)%>%
summarise(vard = sum((x - mean(x))^2/n()))
varC_d = sum(varC_alfa$vard/A)
varC_e = sum(Bc*(muC - mu)^2)/6
varD_alfa = U %>%
group_by(congD)%>%
summarise(vard = sum((x - mean(x))^2/n()))
varD_d = sum(varD_alfa$vard/6)
varC_e = sum(Bc*(muC - mu)^2)
(muC - mu)
varC_e = sum(Bc*(muC$media - mu)^2)
varC_e = sum(Bc*(muC$media - mu)^2)/6
varD_e = sum(Bc*(muD$media - mu)^2)/6
var(U$x)*(5)/6
?var
varD_e = sum(Bd*(muD$media - mu)^2)/6
View(U)
View(varD_alfa)
View(varC_alfa)
varC_d = mean(varC_alfa$vard)
varD_alfa = U %>%
group_by(congD)%>%
summarise(vard = sum((x - mean(x))^2)/6)
View(varD_alfa)
varC_alfa = U %>%
group_by(congC)%>%
summarise(vard = sum((x - mean(x))^2/6))
?summarise
varC_alfa = U %>%
group_by(congC)%>%
summarise(vard = sum((x - mean(x))^2/6)) %>%
sum
varC_d = sum(varC_alfa$vard)
varD_d = sum(varD_alfa$vard)
varD_e = sum(Bd*(muD$media - mu)^2)/6
sample(3)
sample(3, size = 1)
amostra_C = dados %>%
filter(congC == 1)
amostra_C = U %>%
filter(congC == 1)
mean(amostra_C)
mean(amostra_C$x)
var(amostra_C$x)
mean(mean(mu$D))
mean(muD$media))
mean(muD$media)
mean(muD$media^2) - 9.11^2
7.82 + (8-9.11)^2
9 + (7-8)^2
factor(c(rep(c(2,3,5), each = 5))
dados = tibble(
factor(c(rep(c(2,3,5), each = 5)))
)
dados = tibble(
caixa factor(c(rep(c(2,3,5), each = 5)))
)
dados = tibble(
caixa = factor(c(rep(c(2,3,5), each = 5)))
)
View(dados)
dados = tibble(
caixa = factor(c(rep(c(2,3,5), each = 5)))
altura = c(40,25,35,20,30,25,20,20,20,25,20,25,25,30,30)
)
dados = tibble(
caixa = factor(c(rep(c(2,3,5), each = 5))),
altura = c(40,25,35,20,30,25,20,20,20,25,20,25,25,30,30)
)
View(dados)
mu_alpha = dados%>%
group_by(caixa) %>%
summarise(media = mean(altura))
tau_alpha dados%>%
group_by(caixa) %>%
summarise(total = sum(altura))%>%
select(total)
tau_alpha = dados%>%
group_by(caixa) %>%
summarise(total = sum(altura))%>%
select(total)
dados = tibble(
caixa = factor(c(rep(c(2,3,5), each = 5))),
altura = c(40,25,35,20,30,25,20,20,20,25,20,25,25,30,30)
)
mu_alpha = dados%>%
group_by(caixa) %>%
summarise(media = mean(altura)) %>%
select(media)
tau_alpha = dados%>%
group_by(caixa) %>%
summarise(total = sum(altura))%>%
select(total)
var_ect = sum((tau_alpha - mean(tau_alpha))^2)/50
mu_alpha = dados%>%
group_by(caixa) %>%
summarise(media = mean(altura))
tau_alpha = dados%>%
group_by(caixa) %>%
summarise(total = sum(altura))
var_ect = sum((tau_alpha$total - mean(tau_alpha$total))^2)/50
s2_ect = sum((tau_alpha$total - mean(tau_alpha$total))^2)/2
sig2_hat_T = s2_ect/3
tau_hat = 50*mean(tau_alpha$total)
mu_hat = tau_hat/250
IC = tau_hat + c(-qnorm(0.975)*sig2_hat_T)
IC_tau = tau_hat + c(-qnorm(0.975)*sig2_hat_T, qnorm(0.975)*sig2_hat_T)
sig2_hat_Tbar = s2_ect/3
# Estimação do total
sig2_hat_tau = sig2_hat_Tbar*50^2
tau_hat = 50*mean(tau_alpha$total)
IC_tau = tau_hat + c(-qnorm(0.975)*sig2_hat_T, qnorm(0.975)*sig2_hat_T)
# Estimação do total
ep_tau = sqrt(sig2_hat_Tbar*50^2)
IC_tau = tau_hat + c(-qnorm(0.975)*ep_tau, qnorm(0.975)*ep_tau)
# Estimação do total
ep_tau = sqrt(sig2_hat_Tbar*50^2)
tau_hat = 50*mean(tau_alpha$total)
IC_tau = tau_hat + c(-qnorm(0.975)*ep_tau, qnorm(0.975)*ep_tau)
# Estimação do total
ep_tau = sqrt(s2_ect*50^2/3)
tau_hat = 50*mean(tau_alpha$total)
IC_tau = tau_hat + c(-qnorm(0.975)*ep_tau, qnorm(0.975)*ep_tau)
ep_mu = sqrt(s2_ect/(3*5^2))
mu_hat = tau_hat/250
IC_mu = mu_hat + c(-qnorm(0.975)*ep_mu, qnorm(0.975)*ep_mu)
mu_hat = tau_hat/250
IC_mu = mu_hat + c(-qnorm(0.975)*ep_mu, qnorm(0.975)*ep_mu)
library(tidyverse)
library(sampling)
dados = tibble(
caixa = factor(c(rep(c(2,3,5), each = 5))),
altura = c(40,25,35,20,30,25,20,20,20,25,20,25,25,30,30)
)
A = 50
B = 5
a = 3
mu_alpha = dados%>%
group_by(caixa) %>%
summarise(media = mean(altura))
tau_alpha = dados%>%
group_by(caixa) %>%
summarise(total = sum(altura))
s2_ect = sum((tau_alpha$total - mean(tau_alpha$total))^2)/(a-1)
# Estimação do total
ep_tau = sqrt(s2_ect*A^2/a)
tau_hat = A*mean(tau_alpha$total)
IC_tau = tau_hat + c(-qnorm(0.975)*ep_tau, qnorm(0.975)*ep_tau)
ep_mu = sqrt(s2_ect/(a*B^2))
mu_hat = tau_hat/(A*B)
IC_mu = mu_hat + c(-qnorm(0.975)*ep_mu, qnorm(0.975)*ep_mu)
sq_ec = dados %>%
group_by(caixa) %>%
summarise(SQ = sum((altura - mean(altura))^2))
sum(sq_ec$SQ)/(a*B)
sq_dc = dados %>%
group_by(caixa) %>%
summarise(SQ = sum((altura - mean(altura))^2)) %>%
select(SQ) %>%
sum()
library(magrittr)
sq_dc = dados %>%
group_by(caixa) %>%
summarise(SQ = sum((altura - mean(altura))^2)) %>%
select(SQ) %>%
sum() %>%
divide_by(a*B)
sq_ec = dados %>%
group_by(caixa) %>%
summarise(varalpha = (B-1)/B*var(altura)) %>%
sum() %>%
divide_by(a)
sq_ec = dados %>%
group_by(caixa) %>%
summarise(varalpha = (B-1)/B*var(altura)) %>%
select(varalpha) %>%
sum() %>%
divide_by(a)
sq_ec = dados %>%
group_by(caixa) %>%
summarise(varalpha = (B-1)/B*var(altura)) %>%
select(varalpha) %>%
sum() %>%
divide_by(a)
sq_ec = dados %>%
group_by(caixa) %>%
summarise(SQ = sum((mu_alpha$media - mu_hat)^2)) %>%
select(SQ) %>%
sum() %>%
divide_by(a-1)
sq_ec = dados %>%
group_by(caixa) %>%
summarise(SQ = (mu_alpha$media - mu_hat)^2) %>%
select(SQ) %>%
sum() %>%
divide_by(a-1)
sq_ec = dados %>%
group_by(caixa) %>%
summarise(SQ = (mu_alpha$media - mu_hat)^2)
sq_ec = (mu_alpha$media - mu_hat)^2 %>%
sum() %>%
divide_by(a-1)
s2_dc = dados %>%
group_by(caixa) %>%
summarise(SQ = sum((altura - mean(altura))^2)) %>%
select(SQ) %>%
sum() %>%
divide_by(a*B)
s2_ec = (mu_alpha$media - mu_hat)^2 %>%
sum() %>%
divide_by(a-1)
r_int = (s2_ec - s2_dc/(B-1))/(s2_dc + s2_ec)
theta2 = 0.3
source('~/.active-rstudio-document', echo=TRUE)
install.packages("samplingbook")
?stratasize
library(samplingbook)
?stratasize
reg = factor(rep(c(ne, se, s), each = c(9,4,3))
)
dados_1 = tibble(
n_agencias = c(299, 835, 351, 234, 305, 1025, 81, 201, 199, 2502, 6113, 1656, 263, 1035, 1105, 707),
reg = factor(rep(c(ne, se, s), each = c(9,4,3)))
)
library(tidyverse0)
dados_1 = tibble(
n_agencias = c(299, 835, 351, 234, 305, 1025, 81, 201, 199, 2502, 6113, 1656, 263, 1035, 1105, 707),
reg = factor(rep(c(ne, se, s), each = c(9,4,3)))
)
library(tidyverse)
dados_1 = tibble(
n_agencias = c(299, 835, 351, 234, 305, 1025, 81, 201, 199, 2502, 6113, 1656, 263, 1035, 1105, 707),
reg = factor(rep(c(ne, se, s), each = c(9,4,3)))
)
dados_1 = tibble(
n_agencias = c(299, 835, 351, 234, 305, 1025, 81, 201, 199, 2502, 6113, 1656, 263, 1035, 1105, 707),
reg = factor(rep(c('ne', 'se', 's'), each = c(9,4,3)))
)
dados_1 = tibble(
n_agencias = c(299, 835, 351, 234, 305, 1025, 81, 201, 199, 2502, 6113, 1656, 263, 1035, 1105, 707),
reg = factor(rep(c('ne', 'se', 's'), c(9,4,3)))
)
View(dados_1)
desc = dados_1 %>%
group_by(reg) %>%
summarise(tau = sum(n_agencias), mu = mean(n_agencias))
B = table(dados_1$reg)
desc = dados_1 %>%
group_by(reg) %>%
summarise(tau = sum(n_agencias), mu = mean(n_agencias), B_alpha = n())
View(desc)
desc$mu
mean(desc$B_alpha)
desc$B_alpha %>% mean
desc$tau
desc$tau %>% sum
dados_1$n_agencias %>% mean
desc$mu
desc$mu %>% mean
desc$B_alpha %>% mean
desc$tau
desc$tau %>% sum
dados_1$n_agencias %>% mean
desc$mu
desc$mu %>% mean
dados = tibble(
Nh = c(155,62,93),
nh = c(20, 8, 12),
pi= c(0.8, 0.25, 0.5)
)
dados_3 = tibble(
Nh = c(155,62,93),
nh = c(20, 8, 12),
pi= c(0.8, 0.25, 0.5),
sigma_h = sqrt(pi*(1-pi))
)
View(dados)
View(dados_3)
?stratasize
dados_3 = tibble(
Nh = c(60, 40, 100),
nh = c(15, 10, 20),
pi= c(0.3, 0.2, 0.4),
sigma_h = sqrt(pi*(1-pi))
)
e = 0.1
# Questão 3 ---------------------------------------------------------------
library(tidyverse)
library(samplingbook)
dados_3 = tibble(
Nh = c(60, 40, 100),
nh = c(15, 10, 20),
pi= c(0.3, 0.2, 0.4),
sigma_h = sqrt(pi*(1-pi))
)
e = 0.1
stratasize(e = e, Nh= Nh, Sh = sigmah, level = 0.95,
type="prop") #AEpr
attach(dados_3)
stratasize(e = e, Nh= Nh, Sh = sigmah, level = 0.95,
type="prop") #AEpr
attach(dados_3)
stratasize(e = e, Nh= N_h, Sh = S_h, level = 0.95,
type="prop") #AEpr
dados_3 = tibble(
N_h = c(60, 40, 100),
n_h = c(15, 10, 20),
pi= c(0.3, 0.2, 0.4),
S_h = sqrt(pi*(1-pi))
)
e = 0.1
attach(dados_3)
stratasize(e = e, Nh= N_h, Sh = S_h, level = 0.95,
type="prop") #AEpr
stratasamp(n = 61, Nh= Nh, Sh = sigmah,
type="prop") #AEpr
detach(dados_3)
stratasamp(n = 60, Nh= Nh, Sh = sigmah,
type="prop") #AEpr
stratasamp(n = 65, Nh= Nh, Sh = sigmah,
type="prop") #AEpr
rpois(1, 13)
B = 50
N = A*B
y_alpha = c(10,7,14,17,12,6,6,8,5,15)
alpha = 2
b_alpha = 2
B_alpha = 50
yb_alpha = sum(y_alpha)/b_alpha
yb_alpha = c(10,7,14,17,12,6,6,8,5,15)/2
tau_alpha_h = B_alpha*yb_alpha
taub_alpha_h = sum(tau_alpha_h)/10
tau_hat = A*taub_alpha_h
source('D:/OneDrive/R/Amostragem/lista 4.R', echo=TRUE)
source('D:/OneDrive/R/Amostragem/lista 4.R', echo=TRUE)
mu_hat = sum(yb_alpha)/a
S2T = sum((tau_alpha_h - tau_hat)^2)/(a-1)
0.092 + 0.011 + 0.004
0.001 + 0.056 + 0.054
0.64*0.62
0.36*0.62
0.36*0.62 + 0.3968
0.64 - 0.3968
0.36 - 0.2232
0.3968 + 0.2232
0.2968 + 0.2432
0.2432+0.1368
0.2232 + 0.1368
0.001/0.379
0.378/0.379
0.378/0.379 + 0.001/0.379
2*0.378/0.379 + 0.001/0.379
0.003/0.017
0.01/0.017
0.011/0.017
0.1764707 *2 _ 0.6470588
0.1764707 *2 - 0.6470588
0.1764707 *2 + 0.6470588
1*0.1764707 + 2*0.6470588 + 3*0.1764706
0.2 + 0.3*2 + 0.15*3 +0.1 *2 + 0.1 * 4 + 0.05 *6 + 0.05 * 6 + 0.05 * 9
0.3+2*0.45+3*0.25
0.65 + 2*0.25 + 3*0.1
2.9 +1.95*1.45
2.9 -1.95*1.45
0.3*(1-1.95)^2 + 0.45*(2-1.95)^2 + 0.25*(3-1.95)^2
0.65*(1-1.45)^2 +0.25*(2-1.45)^2 + 0.1*(3 - 1.45)^2
sqrt(0.5475)
sqrt(0.4475)
0.0725/((0.7399324)*(0.6689544))
0.003 + 0.011 0.003
0.003 + 0.011 + 0.003
A = matrix(c(0.2,0.3,0.15,0.1,0.1,0.05,0,0.05,0.05), nrow = 3, ncol =3, byrow = T)
View(A)
X = Y = c(1,2,3)
covar = matrix(nrow = 3, ncol =3)
exy = matrix(nrow = 3, ncol =3)
exy = numeric(9)
exy = matrix(nrow = 3, ncol =3)
for (i in 1:3){
for (j in 1:3){
exy[i,j] =  X[i]*Y[j]*A[i,j]
}
}
sum(exy)
cols(A)
px = apply(A, 1, sum)
px = apply(A, 2, sum)
py = apply(A, 1, sum)
ex = sum(px*X)
ey = sum(py*Y)
exy - ex*ey
sum(exy) - ex*ey
covar = sum(exy) - ex*ey
varx = sum(px*(X - ex)^2)
vary = sum(py*(Y - eY)^2)
vary = sum(py*(Y - ey)^2)
corre = covar/sqrt(varx*vary)
0.092 + 0.11 + 0.004
library(TeachingSampling)
data(BigLucy)
set.seed(1234)
a = 20
balfas = rep(10, a)
library(sampling)
m = mstage(BigLucy, stage=list("cluster",""), varnames=list("Zone","ID"), method=c("srswor","srswor"), size=list(a,balfas))
amostra = getdata(BigLucy,m)[[2]]
install.packages("TeachingSampling")
source('~/.active-rstudio-document', echo=TRUE)
View(amostra)
sum(distinct(amostra$Prob))
library(tidyverse)
View(amostra)
?mstage
m = mstage(BigLucy, stage=list("cluster",""), varnames=list("Zone","ID"), method=c("srswor","srswor"), size=list(a,balfas))
m[[1]]
m[[1]] %>%
filter(Zone == "county1")
m[[1]] %>%
filter(Zone == "County1")
View(amostra)
Balfas = table(BigLucy$Zone)
A = length(Balfas)
View(BigLucy)
prob(emp11) = 20/A*10/Balfas[1]
emp11 = 20/A*10/Balfas[1]
BigLucy %>% filter(Zone == "County1") %>% count()
Balfas[1]
table(amostra$Zone)
table(amostra$Zone != 0)
amostra %>%
count(Zone)
sorteados = Balfas[c(11,12,16,20,22,27,28, 33, 42,44,59,64,71, 79,8,80,84,86,9,92)]
rep(sorteados, balfas)
amostra$fpc2 = rep(sorteados, balfas)
amostra$fpc1 = rep(A, nrow(amostra))
amostra$fpc2 = rep(sorteados, balfas)
dclus2<-svydesign(id=~Zone+ID, fpc=~fpc1+fpc2, data=Lucyfinal)
library(survey)
dclus2<-svydesign(id=~Zone+ID, fpc=~fpc1+fpc2, data=Lucyfinal)
dclus2<-svydesign(id=~Zone+ID, fpc=~fpc1+fpc2, data=amostra)
svymean(~Income, dclus2)
confint(svymean(~Income, dclus2))
svymean(~Income, dclus2, deff = T)
?BigLucy
?svymean
15748.33/300
